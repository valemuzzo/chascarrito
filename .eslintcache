[{"D:\\CoderHouse-React\\chascarrito\\src\\index.js":"1","D:\\CoderHouse-React\\chascarrito\\src\\reportWebVitals.js":"2","D:\\CoderHouse-React\\chascarrito\\src\\App.js":"3","D:\\CoderHouse-React\\chascarrito\\src\\components\\NavBar\\index.js":"4","D:\\CoderHouse-React\\chascarrito\\src\\containers\\ItemListContainer.js":"5","D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemCounter\\index.js":"6","D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemList\\index.js":"7","D:\\CoderHouse-React\\chascarrito\\src\\components\\Item\\index.js":"8","D:\\CoderHouse-React\\chascarrito\\src\\containers\\ItemDetailContainer.js":"9","D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemDetail\\index.js":"10","D:\\CoderHouse-React\\chascarrito\\src\\components\\Footer\\index.js":"11","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\index.js":"12","D:\\CoderHouse-React\\chascarrito\\src\\context\\CartContext.js":"13","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CarroVacio.js":"14","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CartItem.js":"15","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CartWidget.js":"16","D:\\CoderHouse-React\\chascarrito\\src\\Firebase\\index.js":"17","D:\\CoderHouse-React\\chascarrito\\src\\context\\FirestoreContext.js":"18","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\Orden.js":"19","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\OrdenItem.js":"20","D:\\CoderHouse-React\\chascarrito\\src\\components\\Slider\\index.js":"21","D:\\CoderHouse-React\\chascarrito\\src\\components\\Error404\\index.js":"22"},{"size":504,"mtime":1612099101528,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1453,"mtime":1616542928416,"results":"26","hashOfConfig":"24"},{"size":2011,"mtime":1616389770317,"results":"27","hashOfConfig":"24"},{"size":3999,"mtime":1616505173054,"results":"28","hashOfConfig":"24"},{"size":1359,"mtime":1616371623621,"results":"29","hashOfConfig":"24"},{"size":430,"mtime":1614786728863,"results":"30","hashOfConfig":"24"},{"size":2697,"mtime":1615812719175,"results":"31","hashOfConfig":"24"},{"size":900,"mtime":1616025073664,"results":"32","hashOfConfig":"24"},{"size":1547,"mtime":1616504891836,"results":"33","hashOfConfig":"24"},{"size":1123,"mtime":1615062094652,"results":"34","hashOfConfig":"24"},{"size":7275,"mtime":1616504781538,"results":"35","hashOfConfig":"24"},{"size":1417,"mtime":1616367206340,"results":"36","hashOfConfig":"24"},{"size":439,"mtime":1614229766408,"results":"37","hashOfConfig":"24"},{"size":1258,"mtime":1616504498617,"results":"38","hashOfConfig":"24"},{"size":839,"mtime":1614229499776,"results":"39","hashOfConfig":"24"},{"size":592,"mtime":1615072890778,"results":"40","hashOfConfig":"24"},{"size":1216,"mtime":1615684790935,"results":"41","hashOfConfig":"24"},{"size":3135,"mtime":1616510294744,"results":"42","hashOfConfig":"24"},{"size":684,"mtime":1616505235485,"results":"43","hashOfConfig":"24"},{"size":1166,"mtime":1616504976133,"results":"44","hashOfConfig":"24"},{"size":574,"mtime":1616504841479,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"c2k70e",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\CoderHouse-React\\chascarrito\\src\\index.js",[],["96","97"],"D:\\CoderHouse-React\\chascarrito\\src\\reportWebVitals.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\App.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\NavBar\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\containers\\ItemListContainer.js",["98"],"import { useFirestoreContext } from '../context/FirestoreContext';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {CardDeck} from 'react-bootstrap';\r\nimport ItemList from '../components/ItemList';\r\nimport Item from '../components/Item';\r\nimport Loader from '../img/loader.gif';\r\nimport Slider from \"../components/Slider\";\r\n\r\nconst ItemListContainer=({text})=>{\r\n    \r\n    const {categoria} = useParams();\r\n    const { itemCollProductos, itemCollCategorias } = useFirestoreContext();\r\n    const [productos, setProductos] = useState([]);\r\n    const [productosCategoria, setProductosCategoria] = useState([]);\r\n    const [tituloCat, setTituloCat] = useState();\r\n    const [isLoading, setIsLoading]= useState(false);\r\n    \r\n    localStorage.removeItem( \"miOrden\" );\r\n\r\n    useEffect(() => {\r\n\r\n        if (categoria) {\r\n            setIsLoading(true);\r\n            const categorias = categoria ? itemCollProductos.where('categoria', '==', categoria) : itemCollProductos;\r\n            \r\n            categorias.get().then(async (value) => {\r\n                //  Usando Promise.all() para esperar que todos los metodos asincronicos se terminen de ejecutar!!\r\n                let aux = await Promise.all(value.docs.map( async (product) => {\r\n    \r\n                    // Tomamos el documento la id de la categoria\r\n                    let auxCategorias = await itemCollCategorias.doc(product.data().categoria).get()\r\n                    setTituloCat(auxCategorias.data().nombre); //Titulo de la categoria (en pagina)\r\n                    return { id: product.id,...product.data(), categoria:auxCategorias.data().nombre }\r\n                    \r\n                }))\r\n                \r\n                console.log(aux)\r\n                setProductosCategoria(aux);\r\n                \r\n            }).catch(error => console.log(\"error buscando\", error))\r\n            .finally(() => setIsLoading(false));\r\n        } else {\r\n        itemCollProductos.get().then(async (value) => {\r\n            //  Usando Promise.all() para esperar que todos los metodos asincronicos se terminen de ejecutar!!\r\n            let aux = await Promise.all(value.docs.map( async (product) => {\r\n\r\n                // Tomamos el documento la id de la categoria\r\n                let auxCategorias = await itemCollCategorias.doc(product.data().categoria).get()\r\n                return {  id: product.id,...product.data(), categoria:auxCategorias.data().nombre }\r\n            }))\r\n            \r\n            setProductos(aux);\r\n        }).catch(error => console.log(\"error buscando\", error))\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n    }, [categoria])\r\n\r\n\r\nconst mostrarCategoria = () => {\r\n    \r\n    if (productosCategoria.length > 0)\r\n    return productosCategoria.map(producto => (\r\n        \r\n        <Item  producto={producto} />\r\n    ));\r\n    \r\n    //Loading...\r\nif (isLoading){\r\n    return(\r\n        <div className=\"contenedor d-flex flex-column align-items-center mx-0\"><img style={{width:'12em'}} src={Loader} alt=\"cargando...\"/>cargando...</div>\r\n    )\r\n    };//\r\n    \r\n return ( \r\n            <div className=\"mincontenedor\">\r\n                <h3 className=\"ml-4\">No hay productos en esta categor√≠a</h3>\r\n            </div>\r\n        );\r\n    \r\n};\r\n \r\n\r\n    return(\r\n        <>\r\n        {categoria ? \r\n        <><h3 className=\"categoria mt-3\">{tituloCat}</h3>\r\n            \r\n            <CardDeck className=\"justify-content-center mx-2 mt-5\">\r\n                {mostrarCategoria()}\r\n            </CardDeck>\r\n        </>\r\n        :\r\n        <><Slider productos={productos}/>\r\n            <div className=\"textoloco align-items-center mt-5 mx-2\">\r\n                \r\n            <h1>{text}</h1></div>\r\n            \r\n           {/* <img style={{width:'96%'}} src=\"https://muzzo.com.ar/img/banner-chascarrito.jpg\"/>*/}\r\n            \r\n            \r\n            <ItemList productos={productos}/>\r\n        </>\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default ItemListContainer;","D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemCounter\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemList\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Item\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\containers\\ItemDetailContainer.js",["99"],"import { useFirestoreContext } from '../context/FirestoreContext';\r\nimport { useEffect, useState } from 'react';\r\nimport {  useParams } from 'react-router-dom';\r\nimport ItemDetail from '../components/ItemDetail';\r\n\r\n\r\nconst ItemDetailContainer = () => {\r\n    const {id}=useParams();\r\n    const { getProducto } = useFirestoreContext();\r\n    ¬† const [producto, setProducto] = useState([]);\r\n    \r\n    \r\n   useEffect(() => {      \r\n       getProducto(id).then((doc) => {\r\n           if(!doc.exists){\r\n               console.log(\"no se encontro el item\");\r\n               return;\r\n           }\r\n           setProducto({id: doc.id, ...doc.data()});\r\n       }).catch((error) => {console.log(\"error no se encontro\", error);\r\n       })\r\n   },[]);\r\n\r\n\r\n\r\n    ¬† return (\r\n    ¬† ¬† <>\r\n    ¬† ¬† ¬† <ItemDetail producto={producto} />\r\n    ¬† ¬† </>\r\n    ¬† );\r\n    };\r\n\r\n\r\nexport default ItemDetailContainer;","D:\\CoderHouse-React\\chascarrito\\src\\components\\ItemDetail\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Footer\\index.js",["100"],"\r\nimport './style.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebookF, faTwitter, faGooglePlusG, faLinkedinIn, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Footer() {\r\n    return(\r\n        \r\n    <div className=\"footer mt-3\">\r\n      <div className=\"d-flex justify-content-center mt-5 py-5\">\r\n      \r\n      <Link className=\"px-3\" to=\"/\"><FontAwesomeIcon className=\"fa-2x\" icon={faFacebookF} /></Link>\r\n      <Link className=\"px-3\" to=\"/\"><FontAwesomeIcon className=\"fa-2x\" icon={faTwitter} /></Link>\r\n      <Link className=\"px-3\" to=\"/\"><FontAwesomeIcon className=\"fa-2x\" icon={faGooglePlusG} /></Link>\r\n      <Link className=\"px-3\" to=\"/\"><FontAwesomeIcon className=\"fa-2x\" icon={faLinkedinIn} /></Link>\r\n      <Link className=\"px-3\" to=\"/\"><FontAwesomeIcon className=\"fa-2x\" icon={faInstagram} /></Link>\r\n      \r\n      </div>\r\n      <div className=\"text-center py-3\">\r\n        ¬© 2021 \r\n        <a href=\"#\"> Chascarrito.com.ar</a>\r\n      </div>\r\n    </div>\r\n    \r\n    )\r\n    }\r\n    \r\n    export default Footer;","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\index.js",["101","102"],"import './cart.css';\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useCartContext } from \"../../context/CartContext\";\r\nimport { useFirestoreContext } from \"../../context/FirestoreContext\";\r\nimport { CartItem } from \"./CartItem\";\r\nimport { CarroVacio } from \"./CarroVacio\";\r\nimport {Table, Button, Form, Row, Col, Collapse} from 'react-bootstrap';\r\n\r\n\r\nfunction Cart (){\r\n    const {cartItems, clear}= useCartContext();\r\n    const {ordenesCollection, dataTime, itemCollProductos}= useFirestoreContext();\r\n    const [total, setTotal] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [cliente, setCliente]= useState('');\r\n    const [orderId, setOrderId] = useState();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [emailCtrl, setEmailCtrl] = useState(false);    \r\n  \r\n    const handleChange=(event)=>{\r\n        setCliente({...cliente, [event.target.name]:event.target.value})\r\n        }\r\n\r\n    const finalizarCompra=()=>{\r\n        \r\n        console.log({cliente: cliente, items: [...cartItems], total});\r\n        \r\n        const nuevaOrden = {\r\n            buyer : cliente,\r\n            compra : cartItems,\r\n            data : dataTime,\r\n            total : total}\r\n            \r\n            ordenesCollection.add(nuevaOrden).then(docRef => {\r\n                console.log(\"Orden ID: \", docRef.id);\r\n                setOrderId(docRef.id);  \r\n                \r\n                    \r\n                })\r\n                .catch(err=>{\r\n                    console.log(\"no se guard√≥\");\r\n                })\r\n        \r\n                clear();\r\n\r\n        //actualizar stock\r\n        let itemCartId = cartItems.map(aux => aux.producto.id);\r\n        \r\n        itemCartId.map(cadaId => {\r\n            itemCollProductos.doc(cadaId).get().then(aux =>{\r\n                let filtroId = cartItems.find(aux => aux.producto.id == cadaId);\r\n                if (aux.data().stock > 0) return aux.ref.update({stock: aux.data().stock - filtroId.items})\r\n            })\r\n        })\r\n    }\r\n    \r\n    const onSubmit = data => {\r\n        if (data.email === data.confirmail) {\r\n            finalizarCompra(data);\r\n            \r\n        } else {\r\n            setEmailCtrl(true);\r\n        }\r\n    };\r\n\r\n  const itemsCarrito = () =>\r\n      cartItems.map(compra => {\r\n            return (\r\n                <CartItem\r\n                key={compra.producto.id}\r\n                producto={compra.producto}\r\n                items={compra.items}\r\n                />      \r\n            );\r\n        });\r\n\r\n    useEffect(() => {\r\n        let montoTotal = 0;\r\n        cartItems.forEach(element => {\r\n            montoTotal += element.items * element.producto.precio;\r\n        });\r\n        setTotal(montoTotal);\r\n    }, [cartItems]);\r\n\r\n    \r\n    return(\r\n    <>  \r\n{/*Items en el carrito*/}\r\n        <div className=\"mincontenedor\">\r\n            <h3 className=\"categoria\">Carrito de Compras</h3>\r\n            {cartItems.length === 0 && <CarroVacio />}\r\n            {cartItems.length !== 0 && (\r\n                <div className=\"align-items-center mx-5\">\r\n                    <div className=\"m-5 d-flex justify-content-between p-1\"> \r\n                 <h3>Tu carrito:</h3><Button  variant=\"light\" onClick={clear}>vaciar carrito</Button>\r\n                 </div>\r\n                    \r\n                    <Table hover size=\"sm\">\r\n                    <tbody>\r\n                        <tr className=\"color-row\">\r\n                        <th className=\"borde\"></th>\r\n                        <th className=\"borde\">Producto</th>\r\n                        <th style={{textAlign:'center'}} className=\"borde\">Cantidad</th>\r\n                        <th style={{textAlign:'center'}} className=\"borde\">P. Unitario</th>\r\n                        <th style={{textAlign:'center'}} className=\"borde\">SubTotal</th>\r\n                        <th style={{textAlign:'center'}} className=\"borde\"></th>\r\n                        </tr>\r\n                        {itemsCarrito()}\r\n                    </tbody>\r\n                 </Table>\r\n                 <div className=\"precio-total\">Precio Total: $ {total}</div>\r\n                 <div className=\"m-5 d-flex justify-content-center p-1\"> \r\n                 <Button  variant=\"info\" onClick={()=>{setOpen(!open)}}>Finalizar Compra</Button></div>\r\n                 </div>\r\n            )}\r\n        </div>\r\n       \r\n        <Collapse in={open} className=\"mx-5 mb-4\" id=\"formUsuario\">\r\n        <div className=\"mx-5 px-5\">\r\n            <h3>A continuaci√≥n complete su datos para generar la √≥rden</h3>\r\n            <Form onSubmit={handleSubmit(onSubmit)}> \r\n                <Form.Group>\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control name=\"nombre\" placeholder=\"Ingrese su nombre\" ref={register({ required: true })} onChange={handleChange}/>\r\n                    {errors.nombre && <div className=\"err\">Debe completar este campo</div>}\r\n                </Form.Group>\r\n                <Row>\r\n                <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control name=\"email\" placeholder=\"Ingrese su email\" ref={register({\r\n                            required: true,\r\n                            pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i },\r\n                        })} onChange={handleChange}/>\r\n                    {errors.email?.type === \"required\" && (\r\n                        <div className=\"err\">Ingrese una direccion de email v√°lida</div>\r\n                    )}\r\n                    {errors.email?.type === \"pattern\" && <div className=\"err\">Formato no v√°lido</div>}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Confirme su email</Form.Label>\r\n                    <Form.Control name=\"confirmail\" placeholder=\"Ingrese su email\" autoComplete=\"nope\" ref={register({\r\n                            required: true,\r\n                            \r\n                            pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i },\r\n                        })} onChange={handleChange}/>\r\n                    {errors.confirmail?.type === \"pattern\" && <div className=\"error\">Formato no v√°lido</div>}\r\n                    {emailCtrl && <div className=\"error\">Los emails no coinciden</div>}\r\n                </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                <Form.Group>\r\n                    <Form.Label>Telefono</Form.Label>\r\n                    <Form.Control name=\"telefono\" placeholder=\"Ingrese un numero de contacto\" ref={register({ required: true })} onChange={handleChange}/>\r\n                    {errors.telefono && <div className=\"err\">Debe completar este campo</div>}\r\n                </Form.Group>\r\n                </Col>\r\n                </Row>\r\n                <div className=\"m-5 d-flex justify-content-center p-1\"> \r\n                \r\n                <Button  type=\"submit\" variant=\"info\">\r\n                    Confirmar Pedido</Button>\r\n                </div>\r\n            </Form>\r\n            {orderId && <Redirect to={`/orden/${orderId}`} />}\r\n        </div>\r\n      </Collapse>\r\n     \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Cart;","D:\\CoderHouse-React\\chascarrito\\src\\context\\CartContext.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CarroVacio.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CartItem.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\CartWidget.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\Firebase\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\context\\FirestoreContext.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\Orden.js",["103"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFirestoreContext } from \"../../context/FirestoreContext\";\r\nimport {OrdenItem} from \"../Cart/OrdenItem\"\r\nimport {Table} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction Orden () {\r\n        const {ordenesCollection}= useFirestoreContext();\r\n        const { orderId } = useParams();\r\n        const [orderUser, setOrderUser]=useState();\r\n\r\n\r\n        useEffect( ()=>{\r\n        \r\n                const docRef = ordenesCollection.doc(orderId);\r\n\r\n                docRef.get().then((doc) => {\r\n                    \r\n                if (doc.exists) {\r\n                    console.log(\"Orden Firestore:\", doc.data());\r\n                    localStorage.setItem(\"miOrden\", JSON.stringify(doc.data()));\r\n                    let dataLocal = JSON.parse(localStorage.getItem(\"miOrden\"));\r\n                    setOrderUser(dataLocal);\r\n                    \r\n                    \r\n                }\r\n                \r\n                }).catch((error) => {\r\n                console.log(\"Error getting document:\", error);\r\n                })\r\n        },[])\r\n        \r\n       \r\n\r\n        console.log(\"Orden Local:\", orderUser)\r\n\r\n        \r\n        \r\n\r\n return <>{orderUser? <>\r\n        <div className=\"orden\">\r\n        <h3 className=\"subtit text-center\">Su √≥rden fue generada con √©xito!\r\n        <p className=\"mt-4\"><b>Enviamos una copia a: {orderUser.buyer.email}</b></p>\r\n        <p className=\"mt-4\"><b>El ID de referencia es:</b></p></h3>\r\n        <h2 className=\"orderId mb-5\">{orderId}</h2>\r\n       <h5><b>Detalle de orden:</b></h5>\r\n        <p><b>ID de Orden:</b> {orderId}</p>     \r\n        <p><b>A nombre de: </b>{orderUser.buyer.nombre}</p>\r\n         <p><b>Email: </b>{orderUser.buyer.email}</p>\r\n        <p><b>Tel√©fono:</b> {orderUser.buyer.telefono}</p>\r\n        <Table striped bordered hover size=\"sm\" className=\"mt-4\">\r\n                <thead>\r\n                <tr>\r\n                <th style={{textAlign:'center'}}>Producto</th>\r\n                <th style={{textAlign:'center'}}>Cantidad</th>\r\n                <th style={{textAlign:'center'}}>Precio Unitario</th>\r\n                <th style={{textAlign:'center'}}>Sub-total</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {orderUser.compra.map(cadaItem => {\r\n                            return (\r\n                                <OrdenItem key={cadaItem.producto.id} producto={cadaItem.producto} items={cadaItem.items} />\r\n                            );\r\n                        })}\r\n                </tbody>\r\n        </Table>\r\n                <div className=\"precio-total\">Precio Total: $ {orderUser.total}</div>\r\n        \r\n                </div>\r\n              </>  : <>\r\n              <div className=\"orden\">\r\n                <h3 className=\"subtit text-center\">Su √≥rden fue generada con √©xito!\r\n                <p className=\"pt-4\"><b>El ID de referencia es:</b></p></h3>\r\n                <h2 className=\"orderId mb-5\">{orderId}</h2>\r\n              </div>\r\n              \r\n              </>}\r\n        </>\r\n}\r\n\r\nexport default Orden;\r\n","D:\\CoderHouse-React\\chascarrito\\src\\components\\Cart\\OrdenItem.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Slider\\index.js",[],"D:\\CoderHouse-React\\chascarrito\\src\\components\\Error404\\index.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":57,"column":8,"nodeType":"110","endLine":57,"endColumn":19,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":24,"column":9,"nodeType":"116","endLine":24,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":51,"column":31,"nodeType":"119","messageId":"120","endLine":51,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":53,"column":70,"nodeType":"123","messageId":"124","endLine":53,"endColumn":72},{"ruleId":"108","severity":1,"message":"125","line":34,"column":11,"nodeType":"110","endLine":34,"endColumn":13,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'itemCollCategorias' and 'itemCollProductos'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has missing dependencies: 'getProducto' and 'id'. Either include them or remove the dependency array.",["130"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'ordenesCollection' and 'orderId'. Either include them or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [categoria, itemCollCategorias, itemCollProductos]",{"range":"138","text":"139"},"Update the dependencies array to be: [getProducto, id]",{"range":"140","text":"141"},"Update the dependencies array to be: [ordenesCollection, orderId]",{"range":"142","text":"143"},[2662,2673],"[categoria, itemCollCategorias, itemCollProductos]",[734,736],"[getProducto, id]",[1138,1140],"[ordenesCollection, orderId]"]